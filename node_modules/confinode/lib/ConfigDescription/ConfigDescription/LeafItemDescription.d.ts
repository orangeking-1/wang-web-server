import { InternalResult } from '../../ConfinodeResult';
import ConfigDescription from './ConfigDescription';
import ParserContext from './ParserContext';
/**
 * Description of a configuration leaf item.
 */
export default abstract class LeafItemDescription<T> implements ConfigDescription<T> {
    private readonly defaultValue?;
    /**
     * Create a description of the leaf item.
     *
     * @param defaultValue - The value to use for inexistent value. If no default value given, the value is
     * mandatory in the configuration.
     */
    constructor(defaultValue?: T | undefined);
    /**
     * Try and parse the value.
     *
     * @param data - The data currently being parsed.
     * @param context - The parsing context.
     * @returns The matching data node.
     */
    parse(data: unknown, context: ParserContext<T>): InternalResult<T> | undefined;
    /**
     * Parse the value and return the expected configuration item.
     *
     * @param value - The value to parse.
     * @param fileName - The name of the file in which value was found.
     * @param keyName - The name of the key currently being parsed.
     * @returns The parsed value.
     */
    protected abstract parseValue(value: unknown, fileName: string, keyName: string): T;
}
