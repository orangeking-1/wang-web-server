/**
 * All the messages of the library.
 */
export declare const messages: {
    allLoadersFailed: (errors: [string | undefined, string][]) => string;
    badExtends: () => string;
    emptyConfiguration: () => string;
    expected: (entry: string, file: string, expected: any) => string;
    expectedArray: () => string;
    expectedBoolean: () => string;
    expectedChoice: (choices: (string | number)[]) => string;
    expectedNumber: () => string;
    expectedObject: () => string;
    expectedString: () => string;
    fileNotFound: (file: string) => string;
    internalError: (message: string) => string;
    loadedFromCache: () => string;
    loadedConfiguration: (file: string) => string;
    loadingFile: (file: string) => string;
    usingLoader: (loader: string) => string;
    missingMandatory: (entry: string) => string;
    multipleFiles: (path: string) => string;
    noLoaderFound: (file: string) => string;
    recursion: (files: string[]) => string;
    searchInFolder: (folder: string) => string;
};
export declare type MessageId = keyof typeof messages;
export declare type MessageParameters = {
    [K in MessageId]: Parameters<typeof messages[K]>;
};
